//Test 1
1
//выведите в консоли значение name через точку
let str1 = '{name: "Alex", age: 24}';

2
//выведите в консоли значение name через квадратные скопки
let str2 = '{name: "Alex", age: 24}';

3
//как называется обьект находячщийся в JSON?
//Литерал

//Test 2
1
//в чем + стрелочных функций?
//принимают фиксированное число аргументов и работают в контексте включающей их области видимости

2
//превратите функцию ниже в стрелочную
//function newUser(name, age => {if (age > 18) {console.log(`${name} ты стар`);} else {console.log(`${name} ты не дорос`);}})

3
//сделай скрипт ниже короче
let call = (a, b) => {return a + b};
//Test 3
1
//как называется функция 
function showMessage(параметры) {
    //код
}
//showMessage

2
//как называется функция 
let showMessage = (параметры) => {/*код*/}

3
//как называется функция 
let showMessage = (параметры) => {
    //код
}
//showMessage

4
//создайте функцию которая выводит в консоли текст 'Запуск' и вызовите функцию

5
//создайте функцию которая в качестве пареметров принимает 'a' и 'b' и возвращает сумму полученных параметров
function hello(a, b) {
    return a + b
}
console.log(hello()2, 5)
6
//конвертируйте функцию ниже в функциональное вырожение
var sum = function [sum]([text='text'[age=24]]) {
    return `${text} ${age}`
};

7
//создайте функцию с помощбю конструктора которая в качестве параметра принимает 'a', 'b' и возвращает сумму полученных параметров 
//?
8
//можно ли вызвать функцию до ее обьявления?
//Да
9
//создайте самовызывающуюся функцию которая выводит в консоли слово 'Запуск'
(function(a){
    alert(a);
    return 'Запуск'
}(1));
10
//что такое arguments в функциях?
function sum(text, age) {
    console.log(arguments);
}

sum('text', 24);
//Shitayesya kak slovo

11
//выведите в консоли обьект с параметрами из функции
function sum(text, age) {
    //код
}

sum('text', 24)
console.log(sum())

12
//задайте параметру text значение 'some text' по умолчанию
function sum(text, age) {
    //код
}

sum('some text', 24);

13
//вызовите функцию ниже
function sum(text, age, job) {
    //код
}
alert(sum)

14
//вызовите и передайте параметры второго обьекта в функцию внутри первого обьекта с помощью call()
const person = {
    firstFunc: function() {
        console.log(`${this.firstName} ${this.lastName}`);
    }
}

const person1 = {
    firstName: 'Samuil',
    lastName: 'Farzaliyev'
}
//?

15
//вызовите и передайте параметры второго обьекта в функцию внутри первого обьекта с помощью apply()
const person2 = {
    firstFunc: function() {
        console.log(`${this.firstName} ${this.lastName}`);
    }
}

const person3 = {
    firstName: 'Samuil',
    lastName: 'Farzaliyev'
}
//?

16
//какой из методов может принять массив параметров
call() //вот
apply()

17
//с помощью какого метода можно вывести максимально большое число из списка
//1, 2, 3
//?
18
//с помощью какого метода можно вывести максимально большое число из массива
//[1, 2, 4]
//?
19
//с помощью какого метода можно вывести самое маленькое число из списка
//1, 2, 3
//?
20
//с помощью какого метода можно вывести маленькое число из массива
//[1, 2, 4]
//?